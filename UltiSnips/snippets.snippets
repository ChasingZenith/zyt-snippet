global !p
import re

def add_placeholder(snip):
    if snip.snippet_start[0] == snip.snippet_end[0]:
        start_col = snip.snippet_start[1]
        end_col = snip.snippet_end[1]
        line = snip.buffer[snip.line]
        info = line[start_col:end_col]
        left = line[0:start_col]
        right = line[end_col:]
        # print("###%s###, ###%s###, ###%s###" % (left, info, right))
        left = re.sub(r"(?!<\\)\$", r"\$", left)
        left = re.sub(r"(?!<\\)\.", r"\.", left)
        right = re.sub(r"(?!<\\)\$", r"\$", right)
        # print("###%s###, ###%s###, ###%s###" % (left, info, right))
        snip.buffer[snip.line] = ''
        snip.expand_anon(left + info + right)
endglobal


snippet snip "create snip" b
snippet $1 "${2:snippet}" $3
$4
`!p snip.rv = "endsnippet"`
endsnippet

snippet vsearch "snippet" w
int(vim.eval("search('$1'), 'n'"))
endsnippet

priority 1000
snippet "\breg\((.*)\)" "raw regrex string" wr
`!p
regrex_string = match.group(1)
regrex_string = re.sub('"', r'\"', regrex_string)
regrex_string = re.sub('\'', r'\'', regrex_string)
snip.rv = '"' + regrex_string + '"'
`
endsnippet

snippet "rv" "snip.rv" brA
snip.rv += $1
endsnippet

snippet "@@(\((\d+)\))?" "match.group" wr
match.group(${1:`!p
if not snip.c:
    if match.group(1):
        snip.rv = match.group(2)
    else:
        snip.rv = "1"
`})$0
endsnippet

post_jump "add_placeholder(snip)"
snippet test "test" w
this is a test
endsnippet

# vim:ft=basicsnippets
